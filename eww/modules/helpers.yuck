(defvar showHelpersWindow true)

(defwidget helpers []
  (eventbox
    :onclick "${EWW_CMD} update showHelpersWindow=${!showHelpersWindow}"
    :valign "end"
	(box :class "helpers"
		:orientation "v"
		:valign "end"
		:spacing 10
		:space-evenly true
		(volume)
		(brightness)
		(inet)
        (battery)
	)
  )
)

(defwidget helpersWindowBox []
  (eventbox
    :onhover "${EWW_CMD} update showHelpersWindow=true"
    :onhoverlost "${EWW_CMD} update showHelpersWindow=false"
    (box
      :class "helpersWindowWidget"
      :orientation "v"
      :valign "center"
      :space-evenly false
      (box
        :class "helpersRow row1"
        :valign "center"
        :halign "center"
        :space-evenly true
        :spacing 10
        (time)
      )
      (box
        :class "helpersRow row2"
        :valign "center"
        :halign "center"
        :space-evenly true
        :spacing 10
        (calWidget)
      )
      (box
        :class "helpersRow"
        :orientation "h"
        :halign "center"
        :space-evenly false
        (internetDetails)
        (volumeControls)
        (brightnessControlsWidget)
      )
      (box
        :class "helpersRow"
        :orientation "h"
        :halign "start"
        :space-evenly true
        :spacing 10
        (diskWidget
          :diskTotal {EWW_DISK["/"].total}
          :diskUsed {round(EWW_DISK["/"].used / EWW_DISK["/"].total * 100, 0)}
          :diskFree {round(EWW_DISK["/"].free / EWW_DISK["/"].total * 100, 0)}
        )
        (batteryWidget)
      )
    )
  )
)

(defwindow helpersWindow
  :monitor 0
  :focusable "false"
  :geometry (geometry
    :x "5"
    :y "20"
    :anchor "left bottom"
  )
  (box
    :vexpand false
    :hexpand false
    (revealer
      :transition "slideright"
      :duration "350ms"
      :reveal showHelpersWindow
      (helpersWindowBox)
    )
  )
)
